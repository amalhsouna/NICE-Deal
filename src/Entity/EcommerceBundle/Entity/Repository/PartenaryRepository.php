<?php

/**
 * PartenaryRepository
 * 
 * @package EntityEcommerceBundle
 * @author Amal Hsouna
 */

namespace Entity\EcommerceBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Entity\EcommerceBundle\Entity\Partenary;

/**
 * PartenaryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartenaryRepository extends EntityRepository
{
    /**
     * Persists Partenary.
     * 
     * @param Products $partenary The partenary model.
     * 
     * @return void
     */
    public function savePartenary(Partenary $partenary)
    {
        $entityManager = $this->getEntityManager();
        $entityManager->persist($partenary);
        $entityManager->flush();
    }
    
    /**
     * Finds all Partenary.
     * 
     * @return array
     */
    public function findAllPartenary()
    {
        $listPartenary = $this->findAll();
        
        return $listPartenary;
    }
    
    /**
     * Finds Partenary by id.
     * 
     * @param id $id The identifier partenary.
     * 
     * @return array
     */
    public function findPartenaryById($id)
    {
        $products = $this->findOneById(array('id' => $id));

        return $products;
    }
    
    /**
     * delete Partenary.
     *
     * @return true.
     */
    public function delete(Partenary $partenary)
    {
        $entityManager = $this->getEntityManager();
        $entityManager->remove($partenary);
        $entityManager->flush();
    }
    
    /* Finds count Partenary.
     * 
     * @return result
     */
    public function findCountPartenary()
    {
        return $this->createQueryBuilder('prt')
                    ->select('COUNT(prt)')
                    ->getQuery()
                    ->getSingleScalarResult();
    }
}
